Index: app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:id=\"@+id/background\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:background=\"@drawable/rain\"\n    tools:paddingTop=\"?attr/actionBarSize\">\n\n    <com.google.android.material.bottomnavigation.BottomNavigationView\n        android:id=\"@+id/bottomNavigationView\"\n        android:layout_width=\"0dp\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginStart=\"0dp\"\n        android:layout_marginEnd=\"0dp\"\n        app:itemBackground=\"@drawable/farg_1\"\n        app:itemIconSize=\"30dp\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintLeft_toLeftOf=\"parent\"\n        app:layout_constraintRight_toRightOf=\"parent\"\n        app:menu=\"@menu/menu\" />\n\n    <fragment\n        android:id=\"@+id/fragment\"\n        android:name=\"androidx.navigation.fragment.NavHostFragment\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"0dp\"\n        app:defaultNavHost=\"true\"\n        app:layout_constraintHorizontal_weight=\"1\"\n        app:layout_constraintBottom_toTopOf=\"@id/bottomNavigationView\"\n        app:layout_constraintHorizontal_bias=\"0.0\"\n        app:layout_constraintLeft_toLeftOf=\"parent\"\n        app:layout_constraintRight_toRightOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.0\"\n        app:navGraph=\"@navigation/navigation\" />\n\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_main.xml	(revision b8f1f33c4523e0d929cdc69234c8f0f13f3806c2)
+++ app/src/main/res/layout/activity_main.xml	(date 1617347932000)
@@ -7,7 +7,7 @@
     android:id="@+id/background"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
-    android:background="@drawable/rain"
+    android:background="@drawable/rain2"
     tools:paddingTop="?attr/actionBarSize">
 
     <com.google.android.material.bottomnavigation.BottomNavigationView
@@ -23,19 +23,4 @@
         app:layout_constraintRight_toRightOf="parent"
         app:menu="@menu/menu" />
 
-    <fragment
-        android:id="@+id/fragment"
-        android:name="androidx.navigation.fragment.NavHostFragment"
-        android:layout_width="match_parent"
-        android:layout_height="0dp"
-        app:defaultNavHost="true"
-        app:layout_constraintHorizontal_weight="1"
-        app:layout_constraintBottom_toTopOf="@id/bottomNavigationView"
-        app:layout_constraintHorizontal_bias="0.0"
-        app:layout_constraintLeft_toLeftOf="parent"
-        app:layout_constraintRight_toRightOf="parent"
-        app:layout_constraintTop_toTopOf="parent"
-        app:layout_constraintVertical_bias="0.0"
-        app:navGraph="@navigation/navigation" />
-
 </androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/clothes/stFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.clothes\n\nimport android.content.Context\nimport android.content.Intent\nimport android.os.Bundle\nimport android.os.Parcel\nimport android.os.Parcelable\nimport android.util.Log\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\nimport android.widget.ImageView\nimport android.widget.TextView\nimport android.widget.Toast\nimport androidx.appcompat.widget.PopupMenu\nimport androidx.constraintlayout.widget.ConstraintLayout\nimport androidx.core.content.ContextCompat.startActivity\nimport androidx.fragment.app.Fragment\nimport androidx.lifecycle.ViewModelProviders\nimport androidx.recyclerview.widget.RecyclerView\nimport androidx.recyclerview.widget.StaggeredGridLayoutManager\nimport com.example.clothes.stSonActivity.Realtime\nimport com.example.clothes.stSonActivity.stSonClothesDetailActivity\nimport com.squareup.picasso.Picasso\nimport kotlinx.android.parcel.Parcelize\nimport kotlinx.android.synthetic.main.st_fragment.*\nimport kotlinx.android.synthetic.main.st_fragment_clothes.*\nimport kotlinx.android.synthetic.main.st_fragment_clothes.view.*\nimport java.util.*\nimport kotlin.collections.ArrayList\n\n\nclass stFragment : BaseFragment() {\n\n    private var clothesList = ArrayList<stFragmentClothes>()\n\n    private lateinit var viewModel: StViewModel\n\n    override fun onCreateView(\n        inflater: LayoutInflater, container: ViewGroup?,\n        savedInstanceState: Bundle?\n    ): View {\n        val newView : View = inflater.inflate(R.layout.st_fragment, container, false)\n        viewModel = ViewModelProviders.of(this).get(StViewModel::class.java)\n        initCalendar(newView)\n        createLiveDataObserver(newView)\n        getWeather(newView)\n\n        return newView\n    }\n\n\n    override fun onActivityCreated(savedInstanceState: Bundle?) {\n        super.onActivityCreated(savedInstanceState)\n        viewModel = ViewModelProviders.of(this).get(StViewModel::class.java)\n        // TODO: Use the ViewModel\n        locate.setOnClickListener {\n            val intent = Intent(activity, SearchCityActivity::class.java)\n            startActivityForResult(intent, 1)\n        }\n    }\n\n    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {\n        super.onActivityResult(requestCode, resultCode, data)\n        Log.d(\"stFragment\", \"returned data is aha\")\n        when (requestCode) {\n            1 -> {\n                clothesList.clear()\n                viewModel.tempArray.clear()\n                view?.let { getWeather(it) }\n            }\n        }\n    }\n\n\n    private fun createLiveDataObserver(newView: View) {\n        val editor = context?.getSharedPreferences(\"temp_weather\", Context.MODE_PRIVATE)?.edit()\n        viewModel.weatherReturnToFragment.observe(viewLifecycleOwner, androidx.lifecycle.Observer {\n            val realtime = it.getParcelableExtra<Realtime>(\"realtime\")\n            val weatherString = it.getParcelableExtra<WeatherString>(\"weatherString\")\n            setWeatherDetailTextView(\n                newView, weatherString?.temperature,\n                weatherString?.weather, weatherString?.humidity\n            )\n            Log.d(\"stFragment\", \"saving weather\")\n            //临时存储 简单一些\n            editor?.putString(\"temperature\", weatherString?.temperature)\n            editor?.putString(\"weather\", weatherString?.weather)\n            editor?.putString(\"humidity\", weatherString?.humidity)\n            editor?.apply()\n            viewModel.calcClothesLevel(realtime!!)\n        })\n\n        viewModel.clothesLevelReturnToFragment.observe(\n            viewLifecycleOwner,\n            androidx.lifecycle.Observer {\n                Log.d(\"stFragment\", \"level is $it return from viewModel\")\n                setLevelTextView(newView, it)\n                editor?.putInt(\"level\", it)\n                editor?.apply()\n                initClothesListRecyclerView(newView, it)\n            })\n    }\n\n\n    //1.判断程序是否是第一次运行（以后可以移到MainActivity里）\n    //2.联网获取天气信息\n    private fun getWeather(newView: View) {\n        val prefs_location = context?.getSharedPreferences(\"user_location\", Context.MODE_PRIVATE)\n        Log.d(\"stFragment\", \"lng is ${prefs_location?.getFloat(\"lng\", -100000F)}\")\n        Log.d(\"stFragment\", \"lat is ${prefs_location?.getFloat(\"lat\", -100000F)}\")\n        Log.d(\"stFragment\", \"city is ${prefs_location?.getString(\"city\", null)}\")\n        if(prefs_location?.getString(\"city\", null) == null) {\n            Toast.makeText(context, \"程序第一次运行，请先输入您的城市\", Toast.LENGTH_SHORT).show()\n            //默认城市\n            prefs_location?.edit()?.apply {\n                putFloat(\"lng\", 116.512885F)\n                putFloat(\"lat\", 39.847469F)\n                putString(\"city\", \"北京市\")\n                apply()\n            }\n            val intent = Intent(activity, SearchCityActivity::class.java)\n            startActivityForResult(intent, 1)\n        } else {\n            val savedLng = prefs_location.getFloat(\"lng\", 0.0F)  // 经度\n            val savedLat = prefs_location.getFloat(\"lat\", 0.0F)  // 纬度\n            val savedCity = prefs_location.getString(\"city\", null)\n            setCityTextView(newView, savedCity)\n            val prefs_weather = context?.getSharedPreferences(\"temp_weather\", Context.MODE_PRIVATE)\n            //加载存储的天气信息以免多次联网\n            Log.d(\n                \"stFragment\",\n                \"temperature is ${prefs_weather?.getString(\"temperature\", null)} before\"\n            )\n            if(prefs_weather?.getString(\"temperature\", null) != null) {\n                Log.d(\"stFragment\", \"recovering saved weather\")\n                setWeatherDetailTextView(\n                    newView,\n                    prefs_weather.getString(\"temperature\", null),\n                    prefs_weather.getString(\"weather\", null),\n                    prefs_weather.getString(\"humidity\", null)\n                )\n                val level = prefs_weather.getInt(\"level\", -100)\n                setLevelTextView(newView, level)\n                Log.d(\n                    \"stFragment\",\n                    \"temperature is ${prefs_weather.getString(\"temperature\", null)} after\"\n                )\n                initClothesListRecyclerView(newView, level)\n            } else {\n                viewModel.getWeatherByLngAndLat(savedLng.toDouble(), savedLat.toDouble())\n            }\n        }\n    }\n\n    private fun setCityTextView(newView: View, city: String?) {\n        val locateTextView : TextView = newView.findViewById(R.id.locate)\n        locateTextView.text = city\n    }\n\n    private fun setLevelTextView(newView: View, level: Int) {\n        val npc2 : TextView = newView.findViewById(R.id.npc2)\n        npc2.text = \"今日推荐(${level}级)\"\n    }\n\n    private fun setWeatherDetailTextView(\n        newView: View,\n        temperature: String?,\n        weather: String?,\n        humidity: String?\n    ) {\n        val weatherTextView : TextView = newView.findViewById(R.id.weather)\n        val temperatureTextView : TextView = newView.findViewById(R.id.temperature)\n        val dryTextView : TextView = newView.findViewById(R.id.dry)\n        temperatureTextView.text = temperature\n        weatherTextView.text = weather\n        dryTextView.text = humidity\n        Log.d(\"stFragment\", \"temperature is ${temperature}\")\n        Log.d(\"stFragment\", \"weather is ${weather}\")\n        Log.d(\"stFragment\", \"humidity is ${humidity}\")\n        val backgroundLayout : ConstraintLayout? = activity?.findViewById(R.id.background)\n        backgroundLayout?.setBackgroundResource(\n            when (weather) {\n                \"晴\" -> R.drawable.sun\n                \"多云\", \"阴\" -> R.drawable.cloud\n                \"小雨\", \"中雨\", \"大雨\", \"暴雨\" -> R.drawable.rain\n                \"小雪\", \"中雪\", \"大雪\", \"暴雪\" -> R.drawable.snow\n                \"大风\" -> R.drawable.wind\n                else -> R.drawable.rain\n            }\n        )\n    }\n\n    private fun initCalendar(newView: View) {\n        val calendar = Calendar.getInstance()\n        val year = calendar.get(Calendar.YEAR)\n        val month = calendar.get(Calendar.MONTH) + 1  // The first month is 0\n        val date = calendar.get(Calendar.DATE)\n        val dateTextView: TextView = newView.findViewById(R.id.date)\n        dateTextView.text = \"$year-$month-$date\"\n    }\n\n    private fun initClothesListRecyclerView(newView: View, level: Int) {\n        initClothes(level)\n        Log.d(\"stFragment\", \"ready to observe files\")\n        viewModel.filesListReturnToFragment.observe(\n            viewLifecycleOwner,\n            androidx.lifecycle.Observer {\n                Log.d(\"stFragment\", \"file list return to fragment now\")\n                val stFragmentrecyclerView: RecyclerView =\n                    newView.findViewById(R.id.stFragmentRecyclerView)\n                val layoutManager =\n                    StaggeredGridLayoutManager(1, StaggeredGridLayoutManager.VERTICAL)\n                stFragmentrecyclerView.layoutManager = layoutManager\n                clothesList.addAll(it)\n                val adapter = stFragmentAdapter(it, this)\n                stFragmentrecyclerView.adapter = adapter\n            })\n    }\n\n    private fun initClothes(level: Int) {\n        val urlRoot = \"http://8.136.214.13/images/$level\"\n        viewModel.getRemoteServerFilesListFromOkHttp(urlRoot)\n    }\n\n\n}\n\n@Parcelize\nclass stFragmentClothes(val name: String, val imageUrl: String): Parcelable\n\nclass stFragmentAdapter(val clothesList: List<stFragmentClothes>, val fragment : Fragment) :\n    RecyclerView.Adapter<stFragmentAdapter.ViewHolder>() {\n\n    inner class ViewHolder(view: View) : RecyclerView.ViewHolder(view) {\n        val clothesText: TextView = view.findViewById(R.id.clothesText)\n        val clothesImage : ImageView = view.findViewById(R.id.clothesImage)\n        val feelImage : ImageView = view.findViewById(R.id.feelImage)\n    }\n\n    private lateinit var mRecyclerView: RecyclerView\n\n    override fun onAttachedToRecyclerView(recyclerView: RecyclerView) {\n        super.onAttachedToRecyclerView(recyclerView)\n        mRecyclerView = recyclerView\n    }\n\n    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {\n        val view = LayoutInflater.from(parent.context)\n            .inflate(R.layout.st_fragment_clothes, parent, false)\n        val viewHolder = ViewHolder(view)\n        viewHolder.itemView.setOnClickListener {\n            val position = viewHolder.adapterPosition\n            val clothes = clothesList[position]\n            val intent = Intent(parent.context, stSonClothesDetailActivity::class.java)\n            intent.putExtra(\"clothesDetail\", clothes)\n            startActivity(parent.context, intent, null)\n        }\n        viewHolder.feelImage.setOnClickListener{\n            val position = viewHolder.adapterPosition\n            val clothes = clothesList[position]\n            val popup = PopupMenu(parent.context,view.feelImage)\n            //Inflating the Popup using xml file\n            popup.menuInflater.inflate(R.menu.popup_menu, popup.menu)\n            val viewModel = ViewModelProviders.of(fragment).get(StViewModel::class.java)\n            popup.setOnMenuItemClickListener { item ->\n\n                when (item!!.itemId) {\n                    R.id.feeling1 -> {\n                        viewModel.handleFeedback(1)\n                        Toast.makeText(parent.context, \"${item.title}已反馈\", Toast.LENGTH_SHORT).show()\n                        Log.d(\"stFragment\", \"too cold feedback\")\n                    }\n                    R.id.feeling2 -> {\n                        viewModel.handleFeedback(-1)\n                        Toast.makeText(parent.context, \"${item.title}已反馈\", Toast.LENGTH_SHORT).show()\n                        Log.d(\"stFragment\", \"too hot feedback\")\n                    }\n                    R.id.feeling3 -> {\n                        Toast.makeText(parent.context, item.title, Toast.LENGTH_SHORT).show()\n                    }\n                }\n                true\n            }\n\n            popup.show()\n        }\n\n            return viewHolder\n    }\n\n    override fun onBindViewHolder(holder: ViewHolder, position: Int) {\n        val clothes = clothesList[position]\n        Log.d(\"stFragment\", \"url is ${clothes.imageUrl}\")\n        Picasso\n            .with(mRecyclerView.context)\n            .load(clothes.imageUrl)\n            .placeholder(R.drawable.loading)\n            .error(R.drawable.logo)\n            .into(holder.clothesImage);\n        holder.clothesText.text = clothes.name\n    }\n\n    override fun getItemCount(): Int = clothesList.size\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/clothes/stFragment.kt	(revision b8f1f33c4523e0d929cdc69234c8f0f13f3806c2)
+++ app/src/main/java/com/example/clothes/stFragment.kt	(date 1617349412000)
@@ -181,12 +181,16 @@
         val backgroundLayout : ConstraintLayout? = activity?.findViewById(R.id.background)
         backgroundLayout?.setBackgroundResource(
             when (weather) {
-                "晴" -> R.drawable.sun
-                "多云", "阴" -> R.drawable.cloud
-                "小雨", "中雨", "大雨", "暴雨" -> R.drawable.rain
-                "小雪", "中雪", "大雪", "暴雪" -> R.drawable.snow
-                "大风" -> R.drawable.wind
-                else -> R.drawable.rain
+                "晴" -> R.drawable.sun2
+                "多云", "阴" -> R.drawable.cloudy
+                "小雨", "中雨" -> R.drawable.rain2
+                "小雪", "中雪", "大雪", "暴雪" -> R.drawable.snow2
+                "大风" -> R.drawable.wind2
+                "轻雾霾","中雾霾","重雾霾" -> R.drawable.haze
+                "大雨","暴雨" -> R.drawable.heavyrain
+                "浮尘", "沙尘" -> R.drawable.ash
+                "雾" -> R.drawable.fog
+                else -> R.drawable.sun2
             }
         )
     }
